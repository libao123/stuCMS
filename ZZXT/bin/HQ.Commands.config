<?xml version="1.0" encoding="utf-8" ?>
<dataSource name="custom">
  <!--数据表结构 列表信息-->
  <dataCommand name="GET_TABLEINFO_LIST" type="Text">
    <commandText>
      SELECT t.*, ROW_NUMBER() OVER (ORDER BY t.TABLE_NAME asc) rn FROM
      (select a.object_id as TABLE_ID,a.name as TABLE_NAME, isnull(b.value,'') as COMMENTS
      from sys.tables a left join (select * from sys.extended_properties where  minor_id=0 ) b
      on a.object_id = b.major_id
      where a.type='u') t  WHERE 1=1
    </commandText>
  </dataCommand>
  <!--数据表结构，数据表记录数-->
  <dataCommand name="GET_COUNT_TABLE" type="Text">
    <commandText>
      SELECT COUNT(*) FROM (select name TABLE_NAME,isnull((select value from sys.extended_properties t where t.name=b.name),'')
      as COMMENTS from sys.tables b )v WHERE 1=1
    </commandText>
  </dataCommand>
  <!--数据表结构表的所有字段及注释-->
  <dataCommand name="GET_TABLE_ATTRIBUTE_LIST" type="Text">
    <commandText>
      SELECT t.*,
      ROW_NUMBER() OVER (
      ORDER BY t.COLUMN_NAME ASC) rn
      FROM
      ( SELECT v.name name,
      a.name COLUMN_NAME,b.name DATA_TYPE,
      a.length DATA_LENGTH,
      isnull(g.[value], ' ') AS COMMENTS,
      a.xprec,
      a.xscale,
      CASE
      WHEN a.isnullable='1' THEN '是'
      WHEN a.isnullable='0' THEN '否'
      END AS isnullable,
      CASE
      WHEN s.COLUMNS_NAME=a.name THEN '1'
      ELSE '0'
      END AS SEARCH
      FROM syscolumns a
      LEFT JOIN systypes b ON a.xtype=b.xusertype
      INNER JOIN sysobjects v ON a.id=v.id
      AND v.xtype='U'
      LEFT JOIN syscomments e ON a.cdefault=e.id
      LEFT JOIN sys.extended_properties g ON a.id=g.major_id
      AND a.colid=g.minor_id
      LEFT JOIN sys.extended_properties f ON v.id=f.class
      AND f.minor_id=0
      LEFT JOIN SEARCH_COLUMNS s ON g.major_id=s.TABLE_ID
      AND a.name=COLUMNS_NAME)t
      WHERE 1=1
    </commandText>
  </dataCommand>
  <!--数据表结构表中字段的数量-->
  <dataCommand name="GET_COUNT_TABLE_ATTRIBUTE" type="Text">
    <commandText>
      SELECT COUNT(*)
      FROM
      (SELECT d.name name,
      a.name COLUMN_NAME,b.name DATA_TYPE,
      a.length DATA_LENGTH,
      isnull(g.[value], ' ') AS COMMENTS
      FROM syscolumns a
      LEFT JOIN systypes b ON a.xtype=b.xusertype
      INNER JOIN sysobjects d ON a.id=d.id
      AND d.xtype='U'
      LEFT JOIN syscomments e ON a.cdefault=e.id
      LEFT JOIN sys.extended_properties g ON a.id=g.major_id
      AND a.colid=g.minor_id
      LEFT JOIN sys.extended_properties f ON d.id=f.class
      AND f.minor_id=0)t
      WHERE 1=1
    </commandText>
  </dataCommand>

  <!--获取所有代码表列表-->
  <dataCommand name="GET_CODE_TABLE_LIST" type="Text">
    <commandText>
      SELECT T.*, ROW_NUMBER() OVER(ORDER BY ORDER_NUM) RN
      FROM (SELECT
      OID,
      TABLE_NAME,
      TABLE_NAME_CN,
      ORDER_NUM
      FROM COD_TABLE_INFOS
      ) T WHERE 1 = 1
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>

  <!--获取代码表字段-->
  <dataCommand name="GET_COD_TABLE_COLUMNS" type="Text">
    <commandText>
      SELECT T.*, ROW_NUMBER() OVER(ORDER BY ORDER_NUM) RN
      FROM (SELECT
      OID,
      ISKEY,
      TABLE_NAME ,
      COLUMN_NAME,
      COLUMN_NAME_CN,
      COLUMN_TYPE ,
      IS_NOT_NULL,
      ORDER_NUM
      FROM COD_TABLE_COLUMNS
      WHERE TABLE_NAME=@TABLE_NAME
      ) T WHERE 1 = 1
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>

  <!--编班管理：编班申请列表-->
  <dataCommand name="Get_Apply_ClassGrouplist" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.GRADE DESC,T.XY) RN
      FROM(
      SELECT A.CLASSCODE, A.CLASSNAME,
      A.XY,A.XY AS XY_NAME,
      A.ZY,A.ZY AS ZY_NAME,
      A.GRADE,A.GRADE AS GRADE_NAME,
      A.STU_TYPE,A.STU_TYPE AS STU_TYPE_NAME,
      B.*,
      B.RET_CHANNEL AS RET_CHANNEL_NAME,
      B.CHK_STATUS AS CHK_STATUS_NAME,
      B.DECLARE_TYPE AS DECLARE_TYPE_NAME,
      B.STEP_NO AS STEP_NO_NAME,
      B.GROUP_TYPE AS GROUP_TYPE_NAME
      FROM BASIC_CLASS_INFO A LEFT JOIN UA_CLASS_GROUP B
      ON A.CLASSCODE = B.GROUP_CLASS
      ) T WHERE 1=1
    </commandText>
  </dataCommand>

  <!--编班管理：编班审批列表-->
  <dataCommand name="Get_Approve_ClassGrouplist" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.GRADE DESC,T.XY) RN
      FROM(
      SELECT B.CLASSCODE, B.CLASSNAME,B.XY,B.ZY,B.GRADE,
      B.XY AS XY_NAME,
      B.ZY AS ZY_NAME,
      B.GRADE AS GRADE_NAME,
      B.STU_TYPE,B.STU_TYPE AS STU_TYPE_NAME,
      A.*,
      A.RET_CHANNEL AS RET_CHANNEL_NAME,
      A.CHK_STATUS AS CHK_STATUS_NAME,
      A.DECLARE_TYPE AS DECLARE_TYPE_NAME,
      A.STEP_NO AS STEP_NO_NAME,
      A.GROUP_TYPE AS GROUP_TYPE_NAME
      FROM UA_CLASS_GROUP  A LEFT JOIN BASIC_CLASS_INFO B
      ON A.GROUP_CLASS  = B.CLASSCODE
      ) T WHERE 1=1
    </commandText>
  </dataCommand>

  <!--审批设置查询列表-->
  <dataCommand name="ApproveSet_list" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.INPUT_TIME DESC) RN
      FROM(
      SELECT DISTINCT DOC_TYPE,DOC_TYPE AS DOC_TYPE_NAME,
      INPUT_ER,INPUT_TIME
      FROM APP_SYS_WORKRULE
      ) T WHERE 1=1
    </commandText>
  </dataCommand>

  <!--工作流规则设置查询列表-->
  <dataCommand name="WorkflowRuleSet_list" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.CREATE_TIME DESC) RN
      FROM(
      SELECT DISTINCT DOC_TYPE,DOC_TYPE AS DOC_TYPE_NAME,DECLARE_TYPE,
      CREATE_USER,CREATE_TIME
      FROM WKF_RULE_QUEUE
      ) T WHERE 1=1 AND DECLARE_TYPE='D'
    </commandText>
  </dataCommand>

  <!--奖助申请：家庭成员列表-->
  <dataCommand name="Get_ProjectApply_Familylist" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.MEMBER_AGE DESC) RN
      FROM(
      SELECT *
      FROM SHOOLAR_APPLY_FAMILY_LIST
      ) T WHERE 1=1
    </commandText>
  </dataCommand>

  <!--奖助申请：学习成绩列表-->
  <dataCommand name="Get_ProjectApply_Studylist" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.SCORE DESC) RN
      FROM(
      SELECT *
      FROM SHOOLAR_APPLY_STUDY_LIST
      ) T WHERE 1=1
    </commandText>
  </dataCommand>

  <!--奖助管理：信息核对列表-->
  <dataCommand name="Get_ProjectApply_Checklist" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.CHK_TIME DESC) RN
      FROM(
      SELECT A.*,
      A.PROJECT_CLASS AS PROJECT_CLASS_NAME,
      A.PROJECT_TYPE AS PROJECT_TYPE_NAME,
      A.PROJECT_YEAR AS PROJECT_YEAR_NAME,
      A.XY AS XY_NAME,
      A.ZY AS ZY_NAME,
      A.CLASS_CODE AS CLASS_CODE_NAME,
      B.OID AS CHECK_OID,
      B.OLD_IDCARDNO,B.OLD_BANKCODE,
      B.NEW_IDCARDNO,B.NEW_BANKCODE,
      B.CHECK_STEP,B.CHECK_STEP AS CHECK_STEP_NAME,
      B.S_CHECK_TIME,B.F_CHECK_TIME,B.Y_CHECK_TIME,
      B.BACK_CODE,B.BACK_NAME,B.BACK_TIME
      FROM (SELECT A.*,B.CHECK_START, B.CHECK_END,B.CHECK_NOTICE_ID
      FROM SHOOLAR_APPLY_HEAD A LEFT JOIN  SHOOLAR_PROJECT_HEAD B
      ON A.PROJECT_SEQ_NO = B.SEQ_NO) A
      LEFT JOIN SHOOLAR_APPLY_CHECK B
      ON A.SEQ_NO = B.SEQ_NO
      ) T WHERE 1=1
      AND T.RET_CHANNEL = 'D4000'
    </commandText>
  </dataCommand>

  <!--家庭调查-->
  <dataCommand name="GET_FAMILY_SITUA" type="Text">
    <commandText>
      SELECT *, ROW_NUMBER() OVER(ORDER BY DEC_TIME DESC) AS RN FROM DST_FAMILY_SITUA WHERE 1=1
    </commandText>
  </dataCommand>

  <!--家庭成员-->
  <dataCommand name="GET_FAMILY_MEMBERS" type="Text">
    <commandText>
      SELECT *, ROW_NUMBER() OVER (ORDER BY SEQ_NO) AS RN,RELATION AS RELATION_NAME,PROFESSION AS PROFESSION_NAME,HEALTH AS HEALTH_NAME FROM DST_FAMILY_MEMBERS WHERE 1=1
    </commandText>
  </dataCommand>

  <!--家庭调查附件-->
  <dataCommand name="GET_FAMILY_PHOTO" type="Text">
    <commandText>
      SELECT *, ROW_NUMBER() OVER (ORDER BY SEQ_NO) AS RN FROM DST_FAMILY_PHOTO WHERE 1=1
    </commandText>
  </dataCommand>

  <!--家庭调查记录-->
  <dataCommand name="GET_SURVEY_RECORD" type="Text">
    <commandText>
      SELECT *, ROW_NUMBER() OVER (ORDER BY OP_TIME DESC) AS RN FROM DST_FAMILY_SITUA_LOG WHERE 1=1
    </commandText>
  </dataCommand>

  <!--困难生申请-->
  <dataCommand name="GET_STU_APPLY" type="Text">
    <commandText>
      SELECT *, ROW_NUMBER() OVER (ORDER BY DECL_TIME DESC) AS RN FROM DST_STU_APPLY WHERE 1=1
    </commandText>
  </dataCommand>

  <!--困难生申请-待处理-->
  <dataCommand name="GET_STU_APPLY_PEND" type="Text">
    <commandText>
      SELECT *, DECLARE_TYPE AS DECLARE_NAME, (CASE POS_CODE WHEN 'F' THEN '' WHEN 'Y' THEN  LEVEL1 WHEN 'X' THEN LEVEL2 END) AS PRE_LEVEL, ROW_NUMBER() OVER (ORDER BY DECL_TIME DESC) AS RN FROM DST_STU_APPLY WHERE 1=1
    </commandText>
  </dataCommand>

  <!--奖励及资助情况-->
  <dataCommand name="GET_STU_GRANT" type="Text">
    <commandText>
      SELECT *, ROW_NUMBER() OVER (ORDER BY ORDER_NO DESC) AS RN,SCHOOL_YEAR AS SCHOOL_YEAR_NAME FROM DST_STU_GRANT WHERE 1=1
    </commandText>
  </dataCommand>

  <dataCommand name="GET_STU_INFO" type="Text">
    <commandText>
      SELECT *, ROW_NUMBER() OVER (ORDER BY NUMBER DESC) AS RN FROM BASIC_STU_INFO WHERE 1=1
    </commandText>
  </dataCommand>

  <dataCommand name="GET_STU_MEMBER" type="Text">
    <commandText>
      SELECT T.*, ROW_NUMBER() OVER (ORDER BY NUMBER DESC) AS RN FROM (
      SELECT a.*,b.NUMBER,cast(round(a.INCOME/12,2) AS numeric(15,2)) AS INCOME_MONTH FROM DST_FAMILY_MEMBERS a
      INNER JOIN DST_FAMILY_SITUA b ON a.SEQ_NO=b.SEQ_NO
      ) T WHERE 1=1
    </commandText>
  </dataCommand>

  <!--信息管理：已接收信息-->
  <dataCommand name="GET_MSG_ACCPTER_LIST" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.SEND_TIME DESC) RN
      FROM(
      SELECT A.MSG_TYPE, A.MSG_CONTENT,A.SEND_NAME,A.SEND_TIME,
      B.*
      FROM MESSGE_INFO A LEFT JOIN MESSGE_ACCPTER B
      ON A.OID = B.MSG_OID
      ) T WHERE 1=1
    </commandText>
  </dataCommand>

  <!--保险管理：信息核对列表-->
  <dataCommand name="Get_InsurApply_Checklist" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.CHK_TIME DESC) RN
      FROM(
      SELECT A.*,
      A.INSUR_TYPE AS INSUR_TYPE_NAME,
      A.INSUR_YEAR AS INSUR_YEAR_NAME,
      A.XY AS XY_NAME,
      A.ZY AS ZY_NAME,
      A.CLASS_CODE AS CLASS_CODE_NAME,
      B.OID AS CHECK_OID,
      B.OLD_INSUR_LIMITDATE,B.OLD_INSUR_MONEY,
      B.NEW_INSUR_LIMITDATE,B.NEW_INSUR_MONEY,
      B.CHECK_STEP,B.CHECK_STEP AS CHECK_STEP_NAME,
      B.S_CHECK_TIME,B.F_CHECK_TIME,B.Y_CHECK_TIME,
      B.REMARK,
      B.APPLY_TYPE,B.APPLY_TYPE AS APPLY_TYPE_NAME,
      B.IS_REFUND,B.IS_REFUND AS IS_REFUND_NAME,
      B.REFUND_NOTES,B.REFUND_INSUR_NAME,
      B.BACK_CODE,B.BACK_NAME,B.BACK_TIME
      FROM (SELECT A.*,B.CHECK_START, B.CHECK_END,B.CHECK_NOTICE_ID
      FROM INSUR_PROJECT_APPLY A LEFT JOIN  INSUR_PROJECT_HEAD B
      ON A.INSUR_SEQ_NO = B.SEQ_NO) A
      LEFT JOIN INSUR_APPLY_CHECK B
      ON A.SEQ_NO = B.SEQ_NO
      ) T WHERE 1=1
      AND T.RET_CHANNEL = 'D4000'
    </commandText>
  </dataCommand>

  <!--贷款管理：信息核对列表-->
  <dataCommand name="Get_LoanApply_Checklist" type="Text">
    <commandText>
      SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.CHK_TIME DESC) RN
      FROM(
      SELECT A.*,
      A.LOAN_TYPE AS LOAN_TYPE_NAME,
      A.LOAN_YEAR AS LOAN_YEAR_NAME,
      A.XY AS XY_NAME,
      A.ZY AS ZY_NAME,
      A.CLASS_CODE AS CLASS_CODE_NAME,
      B.OID AS CHECK_OID,
      B.OLD_BANKCODE,B.NEW_BANKCODE,
      B.CHECK_STEP,B.CHECK_STEP AS CHECK_STEP_NAME,
      B.S_CHECK_TIME,B.F_CHECK_TIME,B.Y_CHECK_TIME,
      B.REMARK,
      B.BACK_CODE,B.BACK_NAME,B.BACK_TIME
      FROM (SELECT A.*,B.CHECK_START, B.CHECK_END,B.CHECK_NOTICE_ID
      FROM LOAN_PROJECT_APPLY A LEFT JOIN  LOAN_PROJECT_HEAD B
      ON A.LOAN_SEQ_NO = B.SEQ_NO) A
      LEFT JOIN LOAN_APPLY_CHECK B
      ON A.SEQ_NO = B.SEQ_NO
      ) T WHERE 1=1
      AND T.RET_CHANNEL = 'D4000'
    </commandText>
  </dataCommand>
</dataSource>